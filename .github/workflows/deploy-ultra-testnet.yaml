name: Build images for ultra testnet environment

on:
  push:
    tags:
      - ultra-testnet-v*

jobs:
  create-ultra-image:
    runs-on: ubuntu-latest
    environment: ultra-testnet
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2.4.0

      - name: Setup Docker
        uses: docker-practice/actions-setup-docker@1.0.8

      - name: Log in to docker registry
        run: |
          echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login \
            --username ${{ secrets.DOCKER_HUB_USER }} \
            --password-stdin

      - name: 'step-log'
        run: |
          echo "github.ref: ${{github.ref}}"

      - name: Build new images and push
        run: |
          make \
            build-docker-images \
            push-docker-images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
          # webapp
          PORT: '80'
          REACT_APP_TITLE: 'Ultra Testnet Dashboard'
          REACT_APP_VERSION: ${{github.ref}}
          REACT_APP_DEFAULT_PRODUCER_LOGO: 'https://eosio.online/images/ultra.jpg'
          REACT_APP_FOOTER_LINKS: '[{ "text": "Ultra Website", "src": "https://ultra.io/" },{ "text": "Block Explorer", "src": "https://explorer.testnet.ultra.io/" },{"text": "Ultra Mainnet Explorer","src": "https://explorer.mainnet.ultra.io/"}]'
          REACT_APP_EOS_RATE_LINK: ''
          REACT_APP_USE_REWARDS: 'false'
          REACT_APP_USE_VOTES: 'false'
          REACT_APP_USE_CPU_BENCHMARK: 'false'
          REACT_APP_USE_BLOCK_PRODUCER_AGREEMENT_CONTRACT: 'true'
          REACT_APP_HASURA_URL: 'https://graphql-ultra-testnet.eosio.online/v1/graphql'
          REACT_APP_EOS_API_NETWORK_NAME: 'ultra-testnet'
          REACT_APP_EOS_API_NETWORK_LABEL: 'Ultra Testnet'
          REACT_APP_EOS_API_NETWORK_LOGO: 'https://icodrops.com/wp-content/uploads/2019/06/Ultra-150x150.jpg'
          REACT_APP_EOS_API_HOST: 'ultratest.api.eosnation.io'
          REACT_APP_EOS_API_PORT: '443'
          REACT_APP_EOS_API_PROTOCOL: 'https'
          REACT_APP_EOS_CHAIN_ID: '7fc56be645bb76ab9d747b53089f132dcb7681db06f0852cfa03eaf6f7ac80e9'
          REACT_APP_EOS_DEFAULT_EXCHANGE_RATE: '1'
          REACT_APP_EOS_DEFAULT_EXCHANGE_RATE_API: ''
          REACT_APP_EOS_USE_BP_JSON_ON_CHAIN: 'false'
          REACT_APP_EOS_BP_JSON_ON_CHAIN_CONTRACT: 'producerjson'
          REACT_APP_EOS_BP_JSON_ON_CHAIN_TABLE: 'producerjson'
          REACT_APP_EOS_BP_JSON_ON_CHAIN_SCOPE: 'producerjson'
          REACT_APP_TOKEN_SYMBOL: 'UOS'
          REACT_APP_NETWORK_URL: '[{"label":"EOS Mainnet","value":"https://mainnet.eosio.online","mainnet":true,"pair":"eos","icon":"eos","order":1},{"label":"Proton","value":"https://proton.eosio.online","mainnet":true,"pair":"proton","icon":"proton","order":2},{"label":"WAX","value":"https://wax.eosio.online","mainnet":true,"pair":"wax","icon":"wax","order":3},{"label":"Telos","value":"https://telos.eosio.online","mainnet":true,"pair":"telos","icon":"telos","order":4},{"label":"Libre","value":"https://libre.eosio.online","mainnet":true,"pair":"libre","icon":"libre","order":5},{"label":"LACChain EOSIO","value":"https://lacchain.eosio.online","mainnet":true,"pair":null,"icon":"lacchain","order":6},{"label":"Jungle4 Testnet","value":"https://jungle.eosio.online","mainnet":false,"pair":"eos","icon":"jungle","order":1},{"label":"Proton Testnet","value":"https://proton-testnet.eosio.online","mainnet":false,"pair":"proton","icon":"proton","order":2},{"label":"WAX Testnet","value":"https://wax-testnet.eosio.online","mainnet":false,"pair":"wax","icon":"wax","order":3},{"label":"Telos Testnet","value":"https://telos-testnet.eosio.online","mainnet":false,"pair":"telos","icon":"telos","order":4},{"label":"Libre Testnet","value":"https://libre-testnet.eosio.online","mainnet":false,"pair":"libre","icon":"libre","order":5},{"label":"Ultra Testnet","value":"https://ultra-testnet.eosio.online","mainnet":false,"pair":"ultra","icon":"ultra","order":6}]'
          REACT_APP_DISABLED_MENU_ITEMS: '["/block-producers","/nodes","/missed-blocks","/endpoints","/bpjson","/ricardian-contract","/block-distribution","/nodes-distribution","/cpu-benchmark","/rewards-distribution"]'
          REACT_APP_BLOCK_EXPLORER_URL: 'https://explorer.testnet.ultra.io/tx/(transaction)'
          REACT_APP_STATE_HISTORY_ENABLED: 'false'
          REACT_APP_GOOGLE_ANALITIC_PAGE_ID: 'G-E6Y0EC9FT8'
          REACT_APP_PUBLIC_RE_CAPTCHA_KEY: ${{ secrets.REACT_APP_PUBLIC_RE_CAPTCHA_KEY }}

      - name: Build and deploy kubernetes files
        id: build_kubernetes_files
        run: |
          make \
            build-kubernetes
        env:
          # general
          NAMESPACE: ultra-testnet-dashboard
          INGRESS_HOST: ultra-testnet.eosio.online
          INGRESS_GRAPHQL_HOST: graphql-ultra-testnet.eosio.online
          # webapp
          REACT_APP_EOS_API_NETWORK_NAME: ultra-testnet
          # postgres
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_DATA: ${{ secrets.POSTGRES_DATA }}
          # hapi
          HAPI_EOS_API_ENDPOINT: https://ultratest.api.eosnation.io
          HAPI_EOS_API_NETWORK_NAME: ultra-testnet
          HAPI_EOS_API_CHAIN_ID: 7fc56be645bb76ab9d747b53089f132dcb7681db06f0852cfa03eaf6f7ac80e9
          HAPI_EOS_BASE_ACCOUNT: ${{ secrets.HAPI_EOS_BASE_ACCOUNT }}
          HAPI_EOS_BASE_ACCOUNT_PASSWORD: ${{ secrets.HAPI_EOS_BASE_ACCOUNT_PASSWORD }}
          HAPI_EOS_FAUCET_ACCOUNT: ${{ secrets.HAPI_EOS_FAUCET_ACCOUNT }}
          HAPI_EOS_FAUCET_ACCOUNT_PASSWORD: ${{ secrets.HAPI_EOS_FAUCET_ACCOUNT_PASSWORD }}
          GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
          HAPI_EOS_MECHANICS_ACCOUNT: cpumechanics
          HAPI_EOS_MECHANICS_INCLUDE_TRANSACTION: ''
          HAPI_EOS_MECHANICS_PASSWORD: ${{ secrets.HAPI_EOS_MECHANICS_PASSWORD }}
          HAPI_EOS_STATE_HISTORY_PLUGIN_ENDPOINT: 'ws://api-node.ultra-testnet:8080'
          HAPI_EOS_WALLET_URL: http://dashboard-wallet:8888
          HAPI_EOS_BP_JSON_ON_CHAIN: 'true'
          HAPI_EOS_BP_JSON_ON_CHAIN_CONTRACT: producerjson
          HAPI_EOS_BP_JSON_ON_CHAIN_TABLE: producerjson
          HAPI_EOS_BP_JSON_ON_CHAIN_SCOPE: producerjson
          HAPI_HASURA_URL: 'http://dashboard-hasura:8080/v1/graphql'
          HAPI_HASURA_ADMIN_SECRET: ${{ secrets.HAPI_HASURA_ADMIN_SECRET }}
          HAPI_SERVER_PORT: '9090'
          HAPI_SERVER_ADDRESS: '0.0.0.0'
          HAPI_DATABASE_URL: ${{ secrets.HAPI_DATABASE_URL }}
          HAPI_SYNC_PRODUCERS_INTERVAL: '14400'
          HAPI_SYNC_PRODUCER_CPU_INTERVAL: '6'
          HAPI_SYNC_PRODUCER_INFO_INTERVAL: '1'
          HAPI_SYNC_SCHEDULE_HISTORY_INTERVAL: 86400
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          HAPI_RE_CAPTCHA_PROJECT_ID: 'eosio-dashboard'
          HAPI_PUBLIC_RE_CAPTCHA_KEY: ${{ secrets.HAPI_PUBLIC_RE_CAPTCHA_KEY }}
          HAPI_SYNC_STATS_INTERVAL: ''
          HAPI_EOS_EXCHANGE_RATE_API: ''
          HAPI_COINGECKO_API_TOKEN_ID: ''
          HAPI_REWARDS_TOKEN: ''
          HAPI_CREATE_ACCOUNT_ACTION_NAME: newnonebact
          # hasura
          HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
          HASURA_GRAPHQL_DATABASE_URL: ${{ secrets.HASURA_GRAPHQL_DATABASE_URL }}
          HASURA_GRAPHQL_ADMIN_SECRET: ${{ secrets.HASURA_GRAPHQL_ADMIN_SECRET }}
          HASURA_GRAPHQL_UNAUTHORIZED_ROLE: guest
          HASURA_GRAPHQL_ACTION_BASE_URL: http://dashboard-hapi:9090

      - name: Setup and deploy kubernetes environment
        uses: steebchen/kubectl@v1.1.0
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          NAMESPACE: ultra-testnet-dashboard
          K8S_BUILD_DIR: build_k8s
        with:
          args: version && make deploy-kubernetes
