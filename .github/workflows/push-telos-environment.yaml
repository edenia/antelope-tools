name: Build images from latest telos branch

on:
  push:
    branches:
      - telos

jobs:
  create-image:
    runs-on: ubuntu-latest
    environment: telos
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1

      - name: Setup Docker
        uses: docker-practice/actions-setup-docker@0.0.1

      - name: Log in to docker registry
        run: |
          echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login \
            --username ${{ secrets.DOCKER_HUB_USER }} \
            --password-stdin

      - name: Build new images and push
        run: |
          make \
            build-docker-images \
            push-docker-images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
          # webapp
          PORT: 80
          REACT_APP_VERSION: $npm_package_version
          REACT_APP_NAME: $npm_package_name
          REACT_APP_TITLE: Telos Testnet Network Dashboard
          REACT_APP_DEFAULT_PRODUCER_LOGO: https://telos.bloks.io/img/chains/telos.png
          REACT_APP_FOOTER_LINKS:
            [
              { 'text': 'Website', 'src': '' },
              { 'text': 'Block Explorer', 'src': 'https://telos.bloks.io' },
              {
                'text': 'Developer Guidelines',
                'src': 'https://guide.eoscostarica.io'
              },
              {
                'text': 'GitHub',
                'src': 'https://github.com/eoscostarica/eosio-dashboard'
              }
            ]
          REACT_APP_EOS_RATE_LINK: ''
          REACT_APP_USE_REWARDS: true
          REACT_APP_USE_VOTES: true
          REACT_APP_USE_CPU_BENCHMARK: true
          REACT_APP_USE_BLOCK_PRODUCER_AGREEMENT_CONTRACT: true
          REACT_APP_HASURA_URL: https://graphql-testnet.eosio.cr/v1/graphql
          REACT_APP_EOS_API_NETWORK_NAME: telos
          REACT_APP_EOS_API_NETWORK_LABEL: Telos
          REACT_APP_EOS_API_NETWORK_LOGO: https://telos.bloks.io/img/chains/telos.png
          REACT_APP_EOS_API_HOST: telos-testnet.eosio.cr
          REACT_APP_EOS_API_PORT: 443
          REACT_APP_EOS_API_PROTOCOL: https
          REACT_APP_EOS_CHAIN_ID: 1eaa0824707c8c16bd25145493bf062aecddfeb56c736f6ba6397f3195f33c9f
          REACT_APP_EOS_USE_BP_JSON_ON_CHAIN: false
          REACT_APP_EOS_BP_JSON_ON_CHAIN_CONTRACT: producerjson
          REACT_APP_EOS_BP_JSON_ON_CHAIN_TABLE: producerjson
          REACT_APP_EOS_BP_JSON_ON_CHAIN_SCOPE: producerjson
          REACT_APP_TOKEN_SYMBOL: ${{ secrets.REACT_APP_TOKEN_SYMBOL }}

      - name: Build and deploy kubernetes files
        id: build_kubernetes_files
        run: |
          make \
            build-kubernetes
        env:
          # general
          NAMESPACE: telos-dashboard
          INGRESS_HOST: telos.testnet.dashboard.eosio.cr
          INGRESS_GRAPHQL_HOST: graphql-telos.dashboard.eosio.cr
          # webapp
          PORT: 80
          REACT_APP_VERSION: $npm_package_version
          REACT_APP_NAME: $npm_package_name
          REACT_APP_TITLE: Telos Testnet Network Dashboard
          REACT_APP_DEFAULT_PRODUCER_LOGO: https://telos.bloks.io/img/chains/telos.png
          REACT_APP_FOOTER_LINKS:
            [
              { 'text': 'Website', 'src': '' },
              { 'text': 'Block Explorer', 'src': 'https://telos.bloks.io' },
              {
                'text': 'Developer Guidelines',
                'src': 'https://guide.eoscostarica.io'
              },
              {
                'text': 'GitHub',
                'src': 'https://github.com/eoscostarica/eosio-dashboard'
              }
            ]
          REACT_APP_EOS_RATE_LINK: ''
          REACT_APP_USE_REWARDS: true
          REACT_APP_USE_VOTES: true
          REACT_APP_USE_CPU_BENCHMARK: true
          REACT_APP_USE_BLOCK_PRODUCER_AGREEMENT_CONTRACT: true
          REACT_APP_HASURA_URL: https://graphql-testnet.eosio.cr/v1/graphql
          REACT_APP_EOS_API_NETWORK_NAME: telos
          REACT_APP_EOS_API_NETWORK_LABEL: Telos
          REACT_APP_EOS_API_NETWORK_LOGO: https://telos.bloks.io/img/chains/telos.png
          REACT_APP_EOS_API_HOST: telos-testnet.eosio.cr
          REACT_APP_EOS_API_PORT: 443
          REACT_APP_EOS_API_PROTOCOL: https
          REACT_APP_EOS_CHAIN_ID: 1eaa0824707c8c16bd25145493bf062aecddfeb56c736f6ba6397f3195f33c9f
          REACT_APP_EOS_USE_BP_JSON_ON_CHAIN: false
          REACT_APP_EOS_BP_JSON_ON_CHAIN_CONTRACT: producerjson
          REACT_APP_EOS_BP_JSON_ON_CHAIN_TABLE: producerjson
          REACT_APP_EOS_BP_JSON_ON_CHAIN_SCOPE: producerjson
          REACT_APP_TOKEN_SYMBOL: ${{ secrets.REACT_APP_TOKEN_SYMBOL }}
          # postgres
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_DATA: ${{ secrets.POSTGRES_DATA }}
          # hapi
          HAPI_EOS_API_ENDPOINT: https://telos-testnet.eosio.cr
          HAPI_EOS_API_CHAIN_ID: 1eaa0824707c8c16bd25145493bf062aecddfeb56c736f6ba6397f3195f33c9f
          HAPI_EOS_BASE_ACCOUNT: ${{ secrets.HAPI_EOS_BASE_ACCOUNT }}
          HAPI_EOS_BASE_ACCOUNT_PASSWORD: ${{ secrets.HAPI_EOS_BASE_ACCOUNT_PASSWORD }}
          HAPI_EOS_MECHANICS_ACCOUNT: ${{ secrets.HAPI_EOS_MECHANICS_ACCOUNT }}
          HAPI_EOS_MECHANICS_PASSWORD: ${{ secrets.HAPI_EOS_MECHANICS_PASSWORD }}
          HAPI_EOS_WALLET_URL: http://monitor-wallet:8888
          HAPI_EOS_BP_JSON_ON_CHAIN: 'false'
          HAPI_EOS_BP_JSON_ON_CHAIN_CONTRACT: producerjson
          HAPI_EOS_BP_JSON_ON_CHAIN_TABLE: producerjson
          HAPI_EOS_BP_JSON_ON_CHAIN_SCOPE: producerjson
          HAPI_HASURA_URL: 'http://monitor-hasura:8080/v1/graphql'
          HAPI_HASURA_ADMIN_SECRET: ${{ secrets.HAPI_HASURA_ADMIN_SECRET }}
          HAPI_SERVER_PORT: '9090'
          HAPI_SERVER_ADDRESS: '127.0.0.1'
          HAPI_SYNC_PRODUCERS_INTERVAL: '86400'
          HAPI_SYNC_PRODUCER_INFO_INTERVAL: '1'
          HAPI_SYNC_PRODUCER_CPU_INTERVAL: '6'
          # hasura
          HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
          HASURA_GRAPHQL_DATABASE_URL: ${{ secrets.HASURA_GRAPHQL_DATABASE_URL }}
          HASURA_GRAPHQL_ADMIN_SECRET: ${{ secrets.HASURA_GRAPHQL_ADMIN_SECRET }}
          HASURA_GRAPHQL_UNAUTHORIZED_ROLE: ${{ secrets.HASURA_GRAPHQL_UNAUTHORIZED_ROLE }}
          HASURA_GRAPHQL_MIGRATIONS_DIR: /hasura-migrations

      - name: Setup and deploy kubernetes environment
        uses: steebchen/kubectl@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          NAMESPACE: jungle-dashboard
          K8S_BUILD_DIR: build_k8s
        with:
          args: version && make deploy-kubernetes
